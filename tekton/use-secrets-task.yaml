apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: use-secrets
spec:
  steps:
    - name: show-secrets
      image: alpine
      env:
        - name: DB_SERVER_NAME
          valueFrom:
            secretKeyRef:
              name: $(radix.build-secrets)
              key: DB_SERVER
      envFrom:
        - secretRef:
            name: $(radix.build-secrets)
          prefix: BUILD_SECRET_
      script: |
        echo "--- Print environment variables, with names containing 'DB_'"
        printenv | grep "DB_"
        
        echo "--- Print folders: /var/*-volume"
          ls /var/*-volume
        
        echo "--- Print file: /var/pass-volume/password.txt"
          cat /var/pass-volume/password.txt
        
        echo "--- Print file: /var/cert-volume/priv/cert.key"
          cat /var/cert-volume/priv/cert.key|head -n 3
        
        echo "--- Print file: /var/cert-volume/priv/cert.pub"
          cat /var/cert-volume/priv/cert.pub|head -n 3
        :
      volumeMounts:
        - name: volume-with-password
          mountPath: /var/pass-volume      #mount this volume to a folder "/var/task-volume"
        - name: volume-cert
          mountPath: /var/cert-volume      #mount this volume to a folder "/var/cert-volume"
  volumes:
    - name: volume-with-password           #a volume, which can be shared between task steps
      secret:
        secretName: $(radix.build-secrets) #map Radix build secrets to a volume
        items:
          - key: DB_PASSWORD               #map this secret to a file "password.txt"
            path: password.txt
    - name: volume-cert                    #a volume, which can be shared between task steps
      secret:
        secretName: $(radix.build-secrets) #map Radix build secrets to a volume
        items:
          - key: CERT_PRIV_KEY             #map this secret to a file "priv/cert.key"
            path: priv/cert.key
          - key: CERT_PUB_KEY              #map this secret to a file "priv/cert.pub"
            path: priv/cert.pub